@{ ViewData["Title"] = "Home Page"; }

<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
<link href="~/lib/bootstrap/dist/css/bootstrap.min.css" rel="stylesheet" />

<link href="https://cdn.datatables.net/1.10.15/css/dataTables.bootstrap.min.css" rel="stylesheet" />
<link href="https://cdn.datatables.net/responsive/2.1.1/css/responsive.bootstrap.min.css" rel="stylesheet" />

<script src="https://cdn.datatables.net/1.10.21/js/jquery.dataTables.min.js"></script>
<script src="https://cdn.datatables.net/1.10.15/js/dataTables.bootstrap4.min.js "></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.26.0/moment.min.js"></script>
<script src="https://cdn.datatables.net/plug-ins/1.10.21/dataRender/datetime.js"></script>
<div class="text-center">
    <table id="pet-grid" class="table table-striped table-bordered dt-responsive nowrap" width="100%" cellspacing="0">
        <thead>
            <tr>
                <th>Id</th>
                <th>Name</th>
                <th>Type</th>
                <th>Missing Since</th>
            </tr>
        </thead>
        <tbody>
        </tbody>
    </table>
</div>
<script>
    $('#pet-grid').dataTable({
        "processing": true, // for show progress bar
        "serverSide": false, // for process server side
        "filter": true, // this is for disable filter (search box)
        "orderMulti": false, // for disable multiple column at once
        "pageLength": 50,
        "lengthMenu": [[5, 10, 25, 50, -1], [5, 10, 25, 50, "All"]],
        "iDisplayLength": 50,
        "ajax": {
            "url": "/Pets/GetAllPetList",
            "type": "POST"
        },
        order: [[0, 'desc']],
        "columnDefs": [
            {
                targets: 2,
                render: function (data, type, row) {
                    var type = '';
                    switch (data) {
                        case 1:
                            type = 'Cat';
                            break;
                        case 2:
                            type = 'Dog';
                            break;
                        case 3:
                            type = 'Hamster';
                            break;
                        case 4:
                            type = 'Bird';
                            break;
                        case 5:
                            type = 'Rabbit';
                            break;
                        case 6:
                            type = 'Fish';
                            break;
                        case 7:
                            type = 'Lizard';
                            break;
                        case 8:
                            type = 'Horse';
                            break;
                        case 9:
                            type = 'Gerbil';
                            break;
                        case 10:
                            type = 'Tortoise';
                            break;
                        default:
                    }
                    return type;
                }
            },
            {
                targets: 3,
                render: function (data, type, row, meta) {
                    return moment.utc(data).local().format('DD/MM/YYYY HH:mm:ss');
                }
            }],
        "columns": [
            { "data": "id","visible":false},
            { "data": "name", "autoWidth": true },
            { "data": "petType", "title": "Pet Type", "autoWidth": true },
            { "data": "missingSince", "title": "Missing Since", "autoWidth": true }
        ]
    });
</script>